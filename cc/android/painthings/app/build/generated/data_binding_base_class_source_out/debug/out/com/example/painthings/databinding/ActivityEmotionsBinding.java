// Generated by view binder compiler. Do not edit!
package com.example.painthings.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.painthings.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEmotionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView emotionCounter;

  @NonNull
  public final TextView emotionSubtitle;

  @NonNull
  public final TextView emotionTitle;

  @NonNull
  public final AppCompatButton minusButton;

  @NonNull
  public final AppCompatButton plusButton;

  private ActivityEmotionsBinding(@NonNull LinearLayout rootView, @NonNull TextView emotionCounter,
      @NonNull TextView emotionSubtitle, @NonNull TextView emotionTitle,
      @NonNull AppCompatButton minusButton, @NonNull AppCompatButton plusButton) {
    this.rootView = rootView;
    this.emotionCounter = emotionCounter;
    this.emotionSubtitle = emotionSubtitle;
    this.emotionTitle = emotionTitle;
    this.minusButton = minusButton;
    this.plusButton = plusButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEmotionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEmotionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_emotions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEmotionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emotionCounter;
      TextView emotionCounter = ViewBindings.findChildViewById(rootView, id);
      if (emotionCounter == null) {
        break missingId;
      }

      id = R.id.emotionSubtitle;
      TextView emotionSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (emotionSubtitle == null) {
        break missingId;
      }

      id = R.id.emotionTitle;
      TextView emotionTitle = ViewBindings.findChildViewById(rootView, id);
      if (emotionTitle == null) {
        break missingId;
      }

      id = R.id.minusButton;
      AppCompatButton minusButton = ViewBindings.findChildViewById(rootView, id);
      if (minusButton == null) {
        break missingId;
      }

      id = R.id.plusButton;
      AppCompatButton plusButton = ViewBindings.findChildViewById(rootView, id);
      if (plusButton == null) {
        break missingId;
      }

      return new ActivityEmotionsBinding((LinearLayout) rootView, emotionCounter, emotionSubtitle,
          emotionTitle, minusButton, plusButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
